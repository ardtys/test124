{"version":3,"file":"static/js/201.8f0fb1c4.chunk.js","mappings":"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","sources":["pages/DocumentDetailsPage.js","services/documentService.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport DocumentService from '../services/documentService';\r\n\r\nconst DocumentDetailsPage = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [document, setDocument] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchDocumentDetails = async () => {\r\n            try {\r\n                const docDetails = await DocumentService.getDocumentById(id);\r\n                setDocument(docDetails);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError('Failed to fetch document details');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchDocumentDetails();\r\n    }, [id]);\r\n\r\n    const handleTransfer = () => {\r\n        navigate(`/documents/${id}/transfer`);\r\n    };\r\n\r\n    const handleVerify = async () => {\r\n        try {\r\n            await DocumentService.verifyDocument(id);\r\n            // Refresh document details\r\n            const updatedDoc = await DocumentService.getDocumentById(id);\r\n            setDocument(updatedDoc);\r\n        } catch (err) {\r\n            setError('Verification failed');\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center\">\r\n                <div>Loading...</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center\">\r\n                <div className=\"text-red-500\">{error}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n            <div className=\"max-w-2xl mx-auto bg-white shadow-md rounded-lg p-8\">\r\n                <h1 className=\"text-2xl font-bold mb-6\">Document Details</h1>\r\n\r\n                <div className=\"space-y-4\">\r\n                    <div>\r\n                        <label className=\"block text-gray-700 font-bold\">Title</label>\r\n                        <p>{document.metadata.title}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-gray-700 font-bold\">Description</label>\r\n                        <p>{document.metadata.description}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-gray-700 font-bold\">Document Number</label>\r\n                        <p>{document.metadata.documentNumber}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-gray-700 font-bold\">Type</label>\r\n                        <p>{document.documentType}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-gray-700 font-bold\">Status</label>\r\n                        <p>{document.status}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-gray-700 font-bold\">Created At</label>\r\n                        <p>{new Date(document.createdAt).toLocaleString()}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mt-6 flex space-x-4\">\r\n                    {document.documentType === 'Transferable' && (\r\n                        <button\r\n                            onClick={handleTransfer}\r\n                            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n                        >\r\n                            Transfer Document\r\n                        </button>\r\n                    )}\r\n\r\n                    {document.status !== 'Verified' && (\r\n                        <button\r\n                            onClick={handleVerify}\r\n                            className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\r\n                        >\r\n                            Verify Document\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DocumentDetailsPage;\r\n","import axios from 'axios';\r\n\r\nclass DocumentService {\r\n    constructor() {\r\n        // Create axios instance\r\n        this.api = axios.create({\r\n            baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api'\r\n        });\r\n\r\n        // Request interceptor for adding token\r\n        this.api.interceptors.request.use(\r\n            (config) => {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    config.headers['Authorization'] = `Bearer ${token}`;\r\n                }\r\n                return config;\r\n            },\r\n            (error) => {\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n\r\n        // Response interceptor for error handling\r\n        this.api.interceptors.response.use(\r\n            (response) => response,\r\n            (error) => {\r\n                // Handle specific error scenarios\r\n                if (error.response) {\r\n                    switch (error.response.status) {\r\n                        case 401:\r\n                            // Token expired or unauthorized, redirect to login\r\n                            this.handleUnauthorized();\r\n                            break;\r\n                        case 403:\r\n                            throw new Error('Access denied');\r\n                        case 404:\r\n                            throw new Error('Resource not found');\r\n                        case 500:\r\n                            throw new Error('Server error');\r\n                        default:\r\n                            throw new Error(\r\n                                error.response.data.message || 'An unexpected error occurred'\r\n                            );\r\n                    }\r\n                } else if (error.request) {\r\n                    // Request made but no response received\r\n                    throw new Error('No response from server');\r\n                } else {\r\n                    // Error in setting up the request\r\n                    throw new Error('Error setting up request');\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    // Handle unauthorized access\r\n    handleUnauthorized() {\r\n        // Clear token and redirect to login\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        window.location.href = '/login';\r\n    }\r\n\r\n    // Create Document\r\n    async createDocument(documentData) {\r\n        try {\r\n            const response = await this.api.post('/documents/create', documentData);\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error, 'Document creation failed');\r\n        }\r\n    }\r\n\r\n    // Verify Document\r\n    async verifyDocument(documentId) {\r\n        try {\r\n            const response = await this.api.post(`/documents/${documentId}/verify`);\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error, 'Document verification failed');\r\n        }\r\n    }\r\n\r\n    // Transfer Document\r\n    async transferDocument(documentId, recipientId) {\r\n        try {\r\n            const response = await this.api.post(`/documents/${documentId}/transfer`, { recipientId });\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error, 'Document transfer failed');\r\n        }\r\n    }\r\n\r\n    // Get All Documents\r\n    async getUserDocuments() {\r\n        try {\r\n            const response = await this.api.get('/documents');\r\n            return response.data.documents || [];\r\n        } catch (error) {\r\n            this.handleError(error, 'Failed to fetch documents');\r\n        }\r\n    }\r\n\r\n    // Get Document by ID\r\n    async getDocumentById(documentId) {\r\n        try {\r\n            const response = await this.api.get(`/documents/${documentId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error, 'Failed to fetch document');\r\n        }\r\n    }\r\n\r\n    // Generic Error Handler\r\n    handleError(error, defaultMessage) {\r\n        if (error.response) {\r\n            // Server responded with an error\r\n            const errorMessage = error.response.data.message || defaultMessage;\r\n            console.error('API Error:', errorMessage);\r\n            throw new Error(errorMessage);\r\n        } else if (error.request) {\r\n            // Request made but no response received\r\n            console.error('Network Error:', error.request);\r\n            throw new Error('Network error. Please check your connection.');\r\n        } else {\r\n            // Error in setting up the request\r\n            console.error('Request Setup Error:', error.message);\r\n            throw new Error(defaultMessage);\r\n        }\r\n    }\r\n\r\n    // Additional Utility Methods\r\n\r\n    // Check if a document is transferable\r\n    isTransferable(document) {\r\n        return document.documentType === 'Transferable';\r\n    }\r\n\r\n    // Get document status color\r\n    getStatusColor(status) {\r\n        switch (status) {\r\n            case 'Draft':\r\n                return 'text-gray-500';\r\n            case 'Active':\r\n                return 'text-green-500';\r\n            case 'Verified':\r\n                return 'text-blue-500';\r\n            case 'Transferred':\r\n                return 'text-purple-500';\r\n            case 'Revoked':\r\n                return 'text-red-500';\r\n            default:\r\n                return 'text-gray-500';\r\n        }\r\n    }\r\n}\r\n\r\nexport default new DocumentService();\r\n"],"names":["DocumentDetailsPage","id","useParams","navigate","useNavigate","document","setDocument","useState","loading","setLoading","error","setError","useEffect","async","docDetails","DocumentService","getDocumentById","err","fetchDocumentDetails","_jsx","className","children","_jsxs","metadata","title","description","documentNumber","documentType","status","Date","createdAt","toLocaleString","onClick","handleTransfer","concat","verifyDocument","updatedDoc","constructor","this","api","axios","create","baseURL","process","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Promise","reject","response","Error","handleUnauthorized","data","message","removeItem","window","location","href","createDocument","documentData","post","handleError","documentId","transferDocument","recipientId","getUserDocuments","get","documents","defaultMessage","errorMessage","console","isTransferable","getStatusColor"],"sourceRoot":""}