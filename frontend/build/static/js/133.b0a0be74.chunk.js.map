{"version":3,"file":"static/js/133.b0a0be74.chunk.js","mappings":"8IAGA,MAqCA,EArCoBA,KAChB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,OAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAiBnC,OAfAK,EAAAA,EAAAA,YAAU,KACeC,WACjB,IACI,MAAMC,QAAiBC,EAAAA,EAAYC,aACnCV,EAAWQ,GACXL,GAAW,EACf,CAAE,MAAOQ,GACLN,EAAS,2BACTF,GAAW,EACf,GAGJS,EAAc,GACf,IAECV,GAAgBW,EAAAA,EAAAA,KAAA,OAAAC,SAAK,uBACrBV,GAAcS,EAAAA,EAAAA,KAAA,OAAAC,SAAMV,KAGpBW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBF,SAAA,EAClCD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,0BAAyBF,SAAC,iBACvCf,IACGgB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC3CC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,aAAWf,EAAQkB,aACtBF,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,UAAQf,EAAQmB,UACnBH,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,SAAOf,EAAQoB,aAGxB,C,uDC+Cd,YAhFA,MACEC,WAAAA,GACEC,KAAKC,MAAQ,IAAIC,EAAAA,GAAMC,4BACvBH,KAAKI,IAAMC,EAAAA,EAAMC,OAAO,CACtBC,QAASJ,6BAEb,CAEA,WAAMK,CAAMX,GACV,UAEQG,KAAKC,MAAMQ,KAAKC,mBAAmB,CAAEb,UAG3C,MAAMc,QAAiBX,KAAKC,MAAMW,KAAKC,cAGjCC,QAAiBd,KAAKI,IAAIW,KAAK,mBAAoB,CACvDlB,MAAOc,EAASd,QAOlB,OAHAmB,aAAaC,QAAQ,QAASH,EAASI,KAAKC,OAC5CH,aAAaC,QAAQ,OAAQG,KAAKC,UAAUP,EAASI,KAAKN,OAEnDE,EAASI,IAClB,CAAE,MAAOnC,GAEP,MADAuC,QAAQvC,MAAM,cAAeA,GACvBA,CACR,CACF,CAEA,cAAMwC,CAASpC,GACb,IAEE,MAAM2B,QAAiBd,KAAKI,IAAIW,KAAK,iBAAkB5B,GAMvD,OAHA6B,aAAaC,QAAQ,QAASH,EAASI,KAAKC,OAC5CH,aAAaC,QAAQ,OAAQG,KAAKC,UAAUP,EAASI,KAAKN,OAEnDE,EAASI,IAClB,CAAE,MAAOnC,GAEP,MADAuC,QAAQvC,MAAM,qBAAsBA,GAC9BA,CACR,CACF,CAEA,YAAMyC,GACJ,UAEQxB,KAAKC,MAAMW,KAAKY,SAGtBR,aAAaS,WAAW,SACxBT,aAAaS,WAAW,OAC1B,CAAE,MAAO1C,GACPuC,QAAQvC,MAAM,eAAgBA,EAChC,CACF,CAEA2C,eAAAA,GACE,QAASV,aAAaW,QAAQ,QAChC,CAEAC,cAAAA,GACE,OAAOR,KAAKS,MAAMb,aAAaW,QAAQ,QACzC,CAEA,gBAAMtC,GACJ,IAEE,aADuBW,KAAKI,IAAI0B,IAAI,kBACpBZ,KAAKN,IACvB,CAAE,MAAO7B,GAEP,MADAuC,QAAQvC,MAAM,sBAAuBA,GAC/BA,CACR,CACF,E","sources":["pages/ProfilePage.js","services/authService.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AuthService from '../services/authService';\r\n\r\nconst ProfilePage = () => {\r\n    const [profile, setProfile] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchProfile = async () => {\r\n            try {\r\n                const userData = await AuthService.getProfile();\r\n                setProfile(userData);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError('Failed to fetch profile');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchProfile();\r\n    }, []);\r\n\r\n    if (loading) return <div>Loading profile...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div className=\"container mx-auto p-4\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">User Profile</h1>\r\n            {profile && (\r\n                <div className=\"bg-white shadow-md rounded p-6\">\r\n                    <p>Username: {profile.username}</p>\r\n                    <p>Email: {profile.email}</p>\r\n                    <p>Role: {profile.role}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import axios from 'axios';\r\nimport { Magic } from 'magic-sdk';\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    this.magic = new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY);\r\n    this.api = axios.create({\r\n      baseURL: process.env.REACT_APP_BACKEND_URL\r\n    });\r\n  }\r\n\r\n  async login(email) {\r\n    try {\r\n      // Initiate Magic Link login\r\n      await this.magic.auth.loginWithMagicLink({ email });\r\n      \r\n      // Get user metadata\r\n      const metadata = await this.magic.user.getMetadata();\r\n      \r\n      // Send token to backend for verification\r\n      const response = await this.api.post('/auth/magic-link', {\r\n        email: metadata.email\r\n      });\r\n\r\n      // Store token and user info\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Login error', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async register(userData) {\r\n    try {\r\n      // Send registration data to backend\r\n      const response = await this.api.post('/auth/register', userData);\r\n\r\n      // Store token and user info\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Registration error', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async logout() {\r\n    try {\r\n      // Logout from Magic Link\r\n      await this.magic.user.logout();\r\n      \r\n      // Clear local storage\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    } catch (error) {\r\n      console.error('Logout error', error);\r\n    }\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  async getProfile() {\r\n    try {\r\n      const response = await this.api.get('/auth/profile');\r\n      return response.data.user;\r\n    } catch (error) {\r\n      console.error('Profile fetch error', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"names":["ProfilePage","profile","setProfile","useState","loading","setLoading","error","setError","useEffect","async","userData","AuthService","getProfile","err","fetchProfile","_jsx","children","_jsxs","className","username","email","role","constructor","this","magic","Magic","process","api","axios","create","baseURL","login","auth","loginWithMagicLink","metadata","user","getMetadata","response","post","localStorage","setItem","data","token","JSON","stringify","console","register","logout","removeItem","isAuthenticated","getItem","getCurrentUser","parse","get"],"sourceRoot":""}