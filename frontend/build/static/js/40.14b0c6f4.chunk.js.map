{"version":3,"file":"static/js/40.14b0c6f4.chunk.js","mappings":"8KAOA,MAmHA,EAnHsBA,KAClB,MAAM,KAAEC,IAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QACvCC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAE7BK,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACiBC,WACnB,IACI,MAAMC,QAAyBC,EAAAA,EAAgBC,mBAC/Cd,EAAaY,GACbT,GAAW,EACf,CAAE,MAAOY,GACLV,EAAS,6BACTF,GAAW,EACf,GAGJa,EAAgB,GACjB,IAgBH,OAAId,GAEIe,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CC,UAC1DF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,kBAMbC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EACxCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACnDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qBAAoBC,SAAC,eACnCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,UACII,QA5BSC,KACzBhB,EAAS,oBAAoB,EA4BbY,UAAU,6DAA4DC,SACzE,qBAGDF,EAAAA,EAAAA,KAAA,UACII,QA9BCV,UACjB,UACUY,EAAAA,EAAYC,SAClBhB,GAASgB,EAAAA,EAAAA,OACTlB,EAAS,SACb,CAAE,MAAOS,GACLU,QAAQrB,MAAM,gBAAiBW,EACnC,GAwBgBG,UAAU,2DAA0DC,SACvE,kBAMTF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,6BAA4BC,SAAA,CAAC,YAAc,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAM+B,UAE3DN,EAAAA,EAAAA,MAAA,WAASF,UAAU,OAAMC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2BAA0BC,SAAC,mBACxCf,IACGa,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gFAA+EC,SACzFf,IAIa,IAArBL,EAAU4B,QACPV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAC,qDAIhDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDC,SAChEpB,EAAU6B,KAAKC,IACZT,EAAAA,EAAAA,MAAA,OAEIF,UAAU,mDAAkDC,SAAA,EAE5DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qBAAoBC,SAAEU,EAAIC,OAAS,uBACjDV,EAAAA,EAAAA,MAAA,KAAGF,UAAU,wBAAuBC,SAAA,CAAC,YACvB,IAAIY,KAAKF,EAAIG,WAAWC,yBAEtCb,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,UACII,QAASA,IAAMf,EAAS,cAAD4B,OAAeL,EAAIM,KAC1CjB,UAAU,gCAA+BC,SAC5C,kBAGDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBC,SAClCU,EAAIO,cAfRP,EAAIM,kBAyBnC,C,uDCnCd,YAhFA,MACEE,WAAAA,GACEC,KAAKC,MAAQ,IAAIC,EAAAA,GAAMC,4BACvBH,KAAKI,IAAMC,EAAAA,EAAMC,OAAO,CACtBC,QAASJ,6BAEb,CAEA,WAAMK,CAAMpB,GACV,UAEQY,KAAKC,MAAMzC,KAAKiD,mBAAmB,CAAErB,UAG3C,MAAMsB,QAAiBV,KAAKC,MAAM5C,KAAKsD,cAGjCC,QAAiBZ,KAAKI,IAAIS,KAAK,mBAAoB,CACvDzB,MAAOsB,EAAStB,QAOlB,OAHA0B,aAAaC,QAAQ,QAASH,EAASI,KAAKC,OAC5CH,aAAaC,QAAQ,OAAQG,KAAKC,UAAUP,EAASI,KAAK3D,OAEnDuD,EAASI,IAClB,CAAE,MAAOlD,GAEP,MADAqB,QAAQrB,MAAM,cAAeA,GACvBA,CACR,CACF,CAEA,cAAMsD,CAASC,GACb,IAEE,MAAMT,QAAiBZ,KAAKI,IAAIS,KAAK,iBAAkBQ,GAMvD,OAHAP,aAAaC,QAAQ,QAASH,EAASI,KAAKC,OAC5CH,aAAaC,QAAQ,OAAQG,KAAKC,UAAUP,EAASI,KAAK3D,OAEnDuD,EAASI,IAClB,CAAE,MAAOlD,GAEP,MADAqB,QAAQrB,MAAM,qBAAsBA,GAC9BA,CACR,CACF,CAEA,YAAMoB,GACJ,UAEQc,KAAKC,MAAM5C,KAAK6B,SAGtB4B,aAAaQ,WAAW,SACxBR,aAAaQ,WAAW,OAC1B,CAAE,MAAOxD,GACPqB,QAAQrB,MAAM,eAAgBA,EAChC,CACF,CAEAyD,eAAAA,GACE,QAAST,aAAaU,QAAQ,QAChC,CAEAC,cAAAA,GACE,OAAOP,KAAKQ,MAAMZ,aAAaU,QAAQ,QACzC,CAEA,gBAAMG,GACJ,IAEE,aADuB3B,KAAKI,IAAIwB,IAAI,kBACpBZ,KAAK3D,IACvB,CAAE,MAAOS,GAEP,MADAqB,QAAQrB,MAAM,sBAAuBA,GAC/BA,CACR,CACF,E,8CC8EF,YA5JA,MACIiC,WAAAA,GAEIC,KAAKI,IAAMC,EAAAA,EAAMC,OAAO,CACpBC,QAASJ,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,sBAAAA,4BAAAA,6BAAAA,cAAAA,8BAAAA,8BAAAA,+CAAAA,6CAAAA,6CAAAA,6CAAAA,gCAAAA,4BAAY0B,mBAAqB,8BAI9C7B,KAAKI,IAAI0B,aAAaC,QAAQC,KACzBC,IACG,MAAMhB,EAAQH,aAAaU,QAAQ,SAInC,OAHIP,IACAgB,EAAOC,QAAuB,cAAC,UAAAtC,OAAaqB,IAEzCgB,CAAM,IAEhBnE,GACUqE,QAAQC,OAAOtE,KAK9BkC,KAAKI,IAAI0B,aAAalB,SAASoB,KAC1BpB,GAAaA,IACb9C,IAEG,IAAIA,EAAM8C,SAiBH,MAAI9C,EAAMiE,QAEP,IAAIM,MAAM,2BAGV,IAAIA,MAAM,4BArBhB,OAAQvE,EAAM8C,SAASd,QACnB,KAAK,IAEDE,KAAKsC,qBACL,MACJ,KAAK,IACD,MAAM,IAAID,MAAM,iBACpB,KAAK,IACD,MAAM,IAAIA,MAAM,sBACpB,KAAK,IACD,MAAM,IAAIA,MAAM,gBACpB,QACI,MAAM,IAAIA,MACNvE,EAAM8C,SAASI,KAAKuB,SAAW,gCAS/C,GAGZ,CAGAD,kBAAAA,GAEIxB,aAAaQ,WAAW,SACxBR,aAAaQ,WAAW,QACxBkB,OAAOC,SAASC,KAAO,QAC3B,CAGA,oBAAMC,CAAeC,GACjB,IAEI,aADuB5C,KAAKI,IAAIS,KAAK,oBAAqB+B,IAC1C5B,IACpB,CAAE,MAAOlD,GACLkC,KAAK6C,YAAY/E,EAAO,2BAC5B,CACJ,CAGA,oBAAMgF,CAAeC,GACjB,IAEI,aADuB/C,KAAKI,IAAIS,KAAK,cAADjB,OAAemD,EAAU,aAC7C/B,IACpB,CAAE,MAAOlD,GACLkC,KAAK6C,YAAY/E,EAAO,+BAC5B,CACJ,CAGA,sBAAMkF,CAAiBD,EAAYE,GAC/B,IAEI,aADuBjD,KAAKI,IAAIS,KAAK,cAADjB,OAAemD,EAAU,aAAa,CAAEE,iBAC5DjC,IACpB,CAAE,MAAOlD,GACLkC,KAAK6C,YAAY/E,EAAO,2BAC5B,CACJ,CAGA,sBAAMU,GACF,IAEI,aADuBwB,KAAKI,IAAIwB,IAAI,eACpBZ,KAAKvD,WAAa,EACtC,CAAE,MAAOK,GACLkC,KAAK6C,YAAY/E,EAAO,4BAC5B,CACJ,CAGA,qBAAMoF,CAAgBH,GAClB,IAEI,aADuB/C,KAAKI,IAAIwB,IAAI,cAADhC,OAAemD,KAClC/B,IACpB,CAAE,MAAOlD,GACLkC,KAAK6C,YAAY/E,EAAO,2BAC5B,CACJ,CAGA+E,WAAAA,CAAY/E,EAAOqF,GACf,GAAIrF,EAAM8C,SAAU,CAEhB,MAAMwC,EAAetF,EAAM8C,SAASI,KAAKuB,SAAWY,EAEpD,MADAhE,QAAQrB,MAAM,aAAcsF,GACtB,IAAIf,MAAMe,EACpB,CAAO,MAAItF,EAAMiE,SAEb5C,QAAQrB,MAAM,iBAAkBA,EAAMiE,SAChC,IAAIM,MAAM,kDAGhBlD,QAAQrB,MAAM,uBAAwBA,EAAMyE,SACtC,IAAIF,MAAMc,GAExB,CAKAE,cAAAA,CAAeC,GACX,MAAiC,iBAA1BA,EAASC,YACpB,CAGAC,cAAAA,CAAe1D,GACX,OAAQA,GACJ,IAAK,QAUL,QACI,MAAO,gBATX,IAAK,SACD,MAAO,iBACX,IAAK,WACD,MAAO,gBACX,IAAK,cACD,MAAO,kBACX,IAAK,UACD,MAAO,eAInB,E","sources":["pages/DashboardPage.js","services/authService.js","services/documentService.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DocumentService from '../services/documentService';\r\nimport AuthService from '../services/authService';\r\nimport { logout } from '../store/authSlice';\r\n\r\nconst DashboardPage = () => {\r\n    const { user } = useSelector((state) => state.auth);\r\n    const [documents, setDocuments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    \r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const fetchDocuments = async () => {\r\n            try {\r\n                const fetchedDocuments = await DocumentService.getUserDocuments();\r\n                setDocuments(fetchedDocuments);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError('Failed to fetch documents');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchDocuments();\r\n    }, []);\r\n\r\n    const handleCreateDocument = () => {\r\n        navigate('/documents/create');\r\n    };\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            await AuthService.logout();\r\n            dispatch(logout());\r\n            navigate('/login');\r\n        } catch (err) {\r\n            console.error('Logout failed', err);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center\">\r\n                <div>Loading...</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n                <h1 className=\"text-3xl font-bold\">Dashboard</h1>\r\n                <div className=\"flex space-x-4\">\r\n                    <button \r\n                        onClick={handleCreateDocument}\r\n                        className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n                    >\r\n                        Create Document\r\n                    </button>\r\n                    <button \r\n                        onClick={handleLogout}\r\n                        className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white shadow-md rounded-lg\">\r\n                <div className=\"p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-4\">Welcome, {user?.email}</h2>\r\n                    \r\n                    <section className=\"mt-6\">\r\n                        <h3 className=\"text-lg font-medium mb-3\">Your Documents</h3>\r\n                        {error && (\r\n                            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\">\r\n                                {error}\r\n                            </div>\r\n                        )}\r\n\r\n                        {documents.length === 0 ? (\r\n                            <div className=\"text-gray-500 text-center py-6\">\r\n                                No documents found. Create your first document!\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                                {documents.map((doc) => (\r\n                                    <div \r\n                                        key={doc.id} \r\n                                        className=\"border rounded-lg p-4 hover:shadow-md transition\"\r\n                                    >\r\n                                        <h4 className=\"font-semibold mb-2\">{doc.title || 'Untitled Document'}</h4>\r\n                                        <p className=\"text-sm text-gray-600\">\r\n                                            Created: {new Date(doc.createdAt).toLocaleDateString()}\r\n                                        </p>\r\n                                        <div className=\"mt-4 flex justify-between\">\r\n                                            <button \r\n                                                onClick={() => navigate(`/documents/${doc.id}`)}\r\n                                                className=\"text-blue-500 hover:underline\"\r\n                                            >\r\n                                                View Details\r\n                                            </button>\r\n                                            <span className=\"text-sm text-gray-500\">\r\n                                                {doc.status}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import axios from 'axios';\r\nimport { Magic } from 'magic-sdk';\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    this.magic = new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY);\r\n    this.api = axios.create({\r\n      baseURL: process.env.REACT_APP_BACKEND_URL\r\n    });\r\n  }\r\n\r\n  async login(email) {\r\n    try {\r\n      // Initiate Magic Link login\r\n      await this.magic.auth.loginWithMagicLink({ email });\r\n      \r\n      // Get user metadata\r\n      const metadata = await this.magic.user.getMetadata();\r\n      \r\n      // Send token to backend for verification\r\n      const response = await this.api.post('/auth/magic-link', {\r\n        email: metadata.email\r\n      });\r\n\r\n      // Store token and user info\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Login error', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async register(userData) {\r\n    try {\r\n      // Send registration data to backend\r\n      const response = await this.api.post('/auth/register', userData);\r\n\r\n      // Store token and user info\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Registration error', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async logout() {\r\n    try {\r\n      // Logout from Magic Link\r\n      await this.magic.user.logout();\r\n      \r\n      // Clear local storage\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    } catch (error) {\r\n      console.error('Logout error', error);\r\n    }\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  async getProfile() {\r\n    try {\r\n      const response = await this.api.get('/auth/profile');\r\n      return response.data.user;\r\n    } catch (error) {\r\n      console.error('Profile fetch error', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import axios from 'axios';\r\n\r\nclass DocumentService {\r\n    constructor() {\r\n        // Create axios instance\r\n        this.api = axios.create({\r\n            baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api'\r\n        });\r\n\r\n        // Request interceptor for adding token\r\n        this.api.interceptors.request.use(\r\n            (config) => {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    config.headers['Authorization'] = `Bearer ${token}`;\r\n                }\r\n                return config;\r\n            },\r\n            (error) => {\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n\r\n        // Response interceptor for error handling\r\n        this.api.interceptors.response.use(\r\n            (response) => response,\r\n            (error) => {\r\n                // Handle specific error scenarios\r\n                if (error.response) {\r\n                    switch (error.response.status) {\r\n                        case 401:\r\n                            // Token expired or unauthorized, redirect to login\r\n                            this.handleUnauthorized();\r\n                            break;\r\n                        case 403:\r\n                            throw new Error('Access denied');\r\n                        case 404:\r\n                            throw new Error('Resource not found');\r\n                        case 500:\r\n                            throw new Error('Server error');\r\n                        default:\r\n                            throw new Error(\r\n                                error.response.data.message || 'An unexpected error occurred'\r\n                            );\r\n                    }\r\n                } else if (error.request) {\r\n                    // Request made but no response received\r\n                    throw new Error('No response from server');\r\n                } else {\r\n                    // Error in setting up the request\r\n                    throw new Error('Error setting up request');\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    // Handle unauthorized access\r\n    handleUnauthorized() {\r\n        // Clear token and redirect to login\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        window.location.href = '/login';\r\n    }\r\n\r\n    // Create Document\r\n    async createDocument(documentData) {\r\n        try {\r\n            const response = await this.api.post('/documents/create', documentData);\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error, 'Document creation failed');\r\n        }\r\n    }\r\n\r\n    // Verify Document\r\n    async verifyDocument(documentId) {\r\n        try {\r\n            const response = await this.api.post(`/documents/${documentId}/verify`);\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error, 'Document verification failed');\r\n        }\r\n    }\r\n\r\n    // Transfer Document\r\n    async transferDocument(documentId, recipientId) {\r\n        try {\r\n            const response = await this.api.post(`/documents/${documentId}/transfer`, { recipientId });\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error, 'Document transfer failed');\r\n        }\r\n    }\r\n\r\n    // Get All Documents\r\n    async getUserDocuments() {\r\n        try {\r\n            const response = await this.api.get('/documents');\r\n            return response.data.documents || [];\r\n        } catch (error) {\r\n            this.handleError(error, 'Failed to fetch documents');\r\n        }\r\n    }\r\n\r\n    // Get Document by ID\r\n    async getDocumentById(documentId) {\r\n        try {\r\n            const response = await this.api.get(`/documents/${documentId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error, 'Failed to fetch document');\r\n        }\r\n    }\r\n\r\n    // Generic Error Handler\r\n    handleError(error, defaultMessage) {\r\n        if (error.response) {\r\n            // Server responded with an error\r\n            const errorMessage = error.response.data.message || defaultMessage;\r\n            console.error('API Error:', errorMessage);\r\n            throw new Error(errorMessage);\r\n        } else if (error.request) {\r\n            // Request made but no response received\r\n            console.error('Network Error:', error.request);\r\n            throw new Error('Network error. Please check your connection.');\r\n        } else {\r\n            // Error in setting up the request\r\n            console.error('Request Setup Error:', error.message);\r\n            throw new Error(defaultMessage);\r\n        }\r\n    }\r\n\r\n    // Additional Utility Methods\r\n\r\n    // Check if a document is transferable\r\n    isTransferable(document) {\r\n        return document.documentType === 'Transferable';\r\n    }\r\n\r\n    // Get document status color\r\n    getStatusColor(status) {\r\n        switch (status) {\r\n            case 'Draft':\r\n                return 'text-gray-500';\r\n            case 'Active':\r\n                return 'text-green-500';\r\n            case 'Verified':\r\n                return 'text-blue-500';\r\n            case 'Transferred':\r\n                return 'text-purple-500';\r\n            case 'Revoked':\r\n                return 'text-red-500';\r\n            default:\r\n                return 'text-gray-500';\r\n        }\r\n    }\r\n}\r\n\r\nexport default new DocumentService();\r\n"],"names":["DashboardPage","user","useSelector","state","auth","documents","setDocuments","useState","loading","setLoading","error","setError","navigate","useNavigate","dispatch","useDispatch","useEffect","async","fetchedDocuments","DocumentService","getUserDocuments","err","fetchDocuments","_jsx","className","children","_jsxs","onClick","handleCreateDocument","AuthService","logout","console","email","length","map","doc","title","Date","createdAt","toLocaleDateString","concat","id","status","constructor","this","magic","Magic","process","api","axios","create","baseURL","login","loginWithMagicLink","metadata","getMetadata","response","post","localStorage","setItem","data","token","JSON","stringify","register","userData","removeItem","isAuthenticated","getItem","getCurrentUser","parse","getProfile","get","REACT_APP_API_URL","interceptors","request","use","config","headers","Promise","reject","Error","handleUnauthorized","message","window","location","href","createDocument","documentData","handleError","verifyDocument","documentId","transferDocument","recipientId","getDocumentById","defaultMessage","errorMessage","isTransferable","document","documentType","getStatusColor"],"sourceRoot":""}