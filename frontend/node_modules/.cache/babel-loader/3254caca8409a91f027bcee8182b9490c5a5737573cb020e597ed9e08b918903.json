{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for authentication\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor for handling errors\napi.interceptors.response.use(response => response, error => {\n  // Handle specific error responses\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        // Unauthorized - redirect to login or refresh token\n        window.location.href = '/login';\n        break;\n      case 403:\n        // Forbidden - show error message\n        console.error('Access denied');\n        break;\n      case 500:\n        // Server error\n        console.error('Server error');\n        break;\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_BACKEND_URL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","window","location","href","console"],"sources":["C:/Users/Daffa/OneDrive/Desktop/XDC NETWORK/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Add request interceptor for authentication\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Add response interceptor for handling errors\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        // Handle specific error responses\r\n        if (error.response) {\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    // Unauthorized - redirect to login or refresh token\r\n                    window.location.href = '/login';\r\n                    break;\r\n                case 403:\r\n                    // Forbidden - show error message\r\n                    console.error('Access denied');\r\n                    break;\r\n                case 500:\r\n                    // Server error\r\n                    console.error('Server error');\r\n                    break;\r\n            }\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EAC1CC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACvD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAI,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAd,GAAG,CAACO,YAAY,CAACU,QAAQ,CAACR,GAAG,CACxBQ,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACP;EACA,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAChB,QAAQH,KAAK,CAACG,QAAQ,CAACC,MAAM;MACzB,KAAK,GAAG;QACJ;QACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B;MACJ,KAAK,GAAG;QACJ;QACAC,OAAO,CAACR,KAAK,CAAC,eAAe,CAAC;QAC9B;MACJ,KAAK,GAAG;QACJ;QACAQ,OAAO,CAACR,KAAK,CAAC,cAAc,CAAC;QAC7B;IACR;EACJ;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}