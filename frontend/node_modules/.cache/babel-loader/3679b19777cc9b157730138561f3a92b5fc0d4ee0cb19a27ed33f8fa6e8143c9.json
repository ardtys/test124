{"ast":null,"code":"import axios from 'axios';\nimport { Magic } from 'magic-sdk';\nclass AuthService {\n  constructor() {\n    // Validate Magic Link key with explicit error\n    if (!process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY) {\n      console.error('‚ùå CRITICAL: Magic Publishable Key is NOT SET');\n      throw new Error('Magic Publishable Key is missing');\n    }\n\n    // Initialize Magic Link with maximum verbosity\n    this.magic = new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY, {\n      logging: true,\n      network: 'mainnet' // or 'testnet' depending on your setup\n    });\n\n    // Enhanced axios configuration\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_BACKEND_URL || 'http://localhost:3000/api',\n      timeout: 15000,\n      // Increased timeout\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    });\n\n    // Comprehensive request interceptor\n    this.api.interceptors.request.use(config => {\n      console.group('üöÄ Axios Request');\n      console.log('URL:', config.url);\n      console.log('Method:', config.method);\n      console.log('Headers:', config.headers);\n      console.log('Data:', config.data);\n      console.groupEnd();\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      console.error('‚ùå Request Interceptor Error:', error);\n      return Promise.reject(error);\n    });\n\n    // Comprehensive response interceptor\n    this.api.interceptors.response.use(response => {\n      console.group('‚úÖ Axios Response');\n      console.log('Status:', response.status);\n      console.log('Data:', response.data);\n      console.groupEnd();\n      return response;\n    }, error => {\n      var _error$response, _error$response2;\n      console.group('‚ùå Axios Response Error');\n      console.error('Status:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status);\n      console.error('Data:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      console.error('Message:', error.message);\n      console.error('Full Error:', error);\n      console.groupEnd();\n      return Promise.reject(error);\n    });\n  }\n\n  // Enhanced email validation\n  validateEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const isValid = emailRegex.test(String(email).toLowerCase());\n    console.log(`Email Validation: ${email} - ${isValid}`);\n    return isValid;\n  }\n  async login(email) {\n    console.group('üîê Login Process');\n    console.log('Attempting login for:', email);\n    try {\n      // Comprehensive email validation\n      if (!this.validateEmail(email)) {\n        console.error('‚ùå Invalid email format');\n        throw new Error('Invalid email format. Please enter a valid email.');\n      }\n\n      // Magic Link Login with comprehensive options\n      console.log('üîÆ Initiating Magic Link Login');\n      const magicLinkResult = await this.magic.auth.loginWithMagicLink({\n        email,\n        showUI: true\n      });\n      console.log('Magic Link Login Result:', magicLinkResult);\n\n      // Retrieve user metadata\n      console.log('üïµÔ∏è Retrieving User Metadata');\n      const metadata = await this.magic.user.getMetadata();\n      console.log('Magic Link Metadata:', metadata);\n\n      // Get DID Token for backend verification\n      console.log('üîë Generating DID Token');\n      const didToken = await this.magic.user.getIdToken();\n      console.log('DID Token Generated');\n\n      // Comprehensive backend login request\n      console.log('üì° Sending Login Request to Backend');\n      const response = await this.api.post('/auth/magic-link', {\n        email: metadata.email,\n        publicAddress: metadata.publicAddress,\n        didToken: didToken\n      });\n      console.log('üéâ Backend Login Response:', response.data);\n\n      // Store authentication details\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      console.groupEnd();\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      console.group('‚ùå Login Error');\n      console.error('Complete Login Process Error:', {\n        name: error.name,\n        message: error.message,\n        stack: error.stack,\n        responseData: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n      });\n      console.groupEnd();\n\n      // Detailed error handling\n      if (error.response) {\n        console.error('Server Error Response:', error.response.data);\n        throw new Error(error.response.data.message || 'Login failed. Please check your credentials and try again.');\n      } else if (error.request) {\n        console.error('No Response Received:', error.request);\n        throw new Error('No response from server. Check your network connection.');\n      } else {\n        console.error('Request Setup Error:', error.message);\n        throw new Error(error.message || 'Login request failed. Please try again.');\n      }\n    }\n  }\n\n  // Other methods remain the same\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","Magic","AuthService","constructor","process","env","REACT_APP_MAGIC_PUBLISHABLE_KEY","console","error","Error","magic","logging","network","api","create","baseURL","REACT_APP_BACKEND_URL","timeout","headers","interceptors","request","use","config","group","log","url","method","data","groupEnd","token","localStorage","getItem","Promise","reject","response","status","_error$response","_error$response2","message","validateEmail","email","emailRegex","isValid","test","String","toLowerCase","login","magicLinkResult","auth","loginWithMagicLink","showUI","metadata","user","getMetadata","didToken","getIdToken","post","publicAddress","setItem","JSON","stringify","_error$response3","name","stack","responseData"],"sources":["C:/Users/Daffa/OneDrive/Desktop/XDC NETWORK/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { Magic } from 'magic-sdk';\r\n\r\nclass AuthService {\r\n    constructor() {\r\n        // Validate Magic Link key with explicit error\r\n        if (!process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY) {\r\n            console.error('‚ùå CRITICAL: Magic Publishable Key is NOT SET');\r\n            throw new Error('Magic Publishable Key is missing');\r\n        }\r\n\r\n        // Initialize Magic Link with maximum verbosity\r\n        this.magic = new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY, {\r\n            logging: true,\r\n            network: 'mainnet' // or 'testnet' depending on your setup\r\n        });\r\n        \r\n        // Enhanced axios configuration\r\n        this.api = axios.create({\r\n            baseURL: process.env.REACT_APP_BACKEND_URL || 'http://localhost:3000/api',\r\n            timeout: 15000, // Increased timeout\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n\r\n        // Comprehensive request interceptor\r\n        this.api.interceptors.request.use(\r\n            (config) => {\r\n                console.group('üöÄ Axios Request');\r\n                console.log('URL:', config.url);\r\n                console.log('Method:', config.method);\r\n                console.log('Headers:', config.headers);\r\n                console.log('Data:', config.data);\r\n                console.groupEnd();\r\n                \r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    config.headers['Authorization'] = `Bearer ${token}`;\r\n                }\r\n                return config;\r\n            },\r\n            (error) => {\r\n                console.error('‚ùå Request Interceptor Error:', error);\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n\r\n        // Comprehensive response interceptor\r\n        this.api.interceptors.response.use(\r\n            (response) => {\r\n                console.group('‚úÖ Axios Response');\r\n                console.log('Status:', response.status);\r\n                console.log('Data:', response.data);\r\n                console.groupEnd();\r\n                return response;\r\n            },\r\n            (error) => {\r\n                console.group('‚ùå Axios Response Error');\r\n                console.error('Status:', error.response?.status);\r\n                console.error('Data:', error.response?.data);\r\n                console.error('Message:', error.message);\r\n                console.error('Full Error:', error);\r\n                console.groupEnd();\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    // Enhanced email validation\r\n    validateEmail(email) {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        const isValid = emailRegex.test(String(email).toLowerCase());\r\n        console.log(`Email Validation: ${email} - ${isValid}`);\r\n        return isValid;\r\n    }\r\n\r\n    async login(email) {\r\n        console.group('üîê Login Process');\r\n        console.log('Attempting login for:', email);\r\n\r\n        try {\r\n            // Comprehensive email validation\r\n            if (!this.validateEmail(email)) {\r\n                console.error('‚ùå Invalid email format');\r\n                throw new Error('Invalid email format. Please enter a valid email.');\r\n            }\r\n\r\n            // Magic Link Login with comprehensive options\r\n            console.log('üîÆ Initiating Magic Link Login');\r\n            const magicLinkResult = await this.magic.auth.loginWithMagicLink({ \r\n                email,\r\n                showUI: true\r\n            });\r\n            console.log('Magic Link Login Result:', magicLinkResult);\r\n\r\n            // Retrieve user metadata\r\n            console.log('üïµÔ∏è Retrieving User Metadata');\r\n            const metadata = await this.magic.user.getMetadata();\r\n            console.log('Magic Link Metadata:', metadata);\r\n\r\n            // Get DID Token for backend verification\r\n            console.log('üîë Generating DID Token');\r\n            const didToken = await this.magic.user.getIdToken();\r\n            console.log('DID Token Generated');\r\n\r\n            // Comprehensive backend login request\r\n            console.log('üì° Sending Login Request to Backend');\r\n            const response = await this.api.post('/auth/magic-link', {\r\n                email: metadata.email,\r\n                publicAddress: metadata.publicAddress,\r\n                didToken: didToken\r\n            });\r\n\r\n            console.log('üéâ Backend Login Response:', response.data);\r\n\r\n            // Store authentication details\r\n            localStorage.setItem('token', response.data.token);\r\n            localStorage.setItem('user', JSON.stringify(response.data.user));\r\n\r\n            console.groupEnd();\r\n            return response.data;\r\n\r\n        } catch (error) {\r\n            console.group('‚ùå Login Error');\r\n            console.error('Complete Login Process Error:', {\r\n                name: error.name,\r\n                message: error.message,\r\n                stack: error.stack,\r\n                responseData: error.response?.data\r\n            });\r\n            console.groupEnd();\r\n\r\n            // Detailed error handling\r\n            if (error.response) {\r\n                console.error('Server Error Response:', error.response.data);\r\n                throw new Error(\r\n                    error.response.data.message || \r\n                    'Login failed. Please check your credentials and try again.'\r\n                );\r\n            } else if (error.request) {\r\n                console.error('No Response Received:', error.request);\r\n                throw new Error('No response from server. Check your network connection.');\r\n            } else {\r\n                console.error('Request Setup Error:', error.message);\r\n                throw new Error(error.message || 'Login request failed. Please try again.');\r\n            }\r\n        }\r\n    }\r\n\r\n    // Other methods remain the same\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}