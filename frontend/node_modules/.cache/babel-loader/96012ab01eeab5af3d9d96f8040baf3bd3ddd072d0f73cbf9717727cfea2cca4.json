{"ast":null,"code":"import axios from 'axios';\nclass DocumentService {\n  constructor() {\n    // Create axios instance\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api'\n    });\n\n    // Request interceptor for adding token\n    this.api.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Response interceptor for error handling\n    this.api.interceptors.response.use(response => response, error => {\n      // Handle specific error scenarios\n      if (error.response) {\n        switch (error.response.status) {\n          case 401:\n            // Token expired or unauthorized, redirect to login\n            this.handleUnauthorized();\n            break;\n          case 403:\n            throw new Error('Access denied');\n          case 404:\n            throw new Error('Resource not found');\n          case 500:\n            throw new Error('Server error');\n          default:\n            throw new Error(error.response.data.message || 'An unexpected error occurred');\n        }\n      } else if (error.request) {\n        // Request made but no response received\n        throw new Error('No response from server');\n      } else {\n        // Error in setting up the request\n        throw new Error('Error setting up request');\n      }\n    });\n  }\n\n  // Handle unauthorized access\n  handleUnauthorized() {\n    // Clear token and redirect to login\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n\n  // Create Document\n  async createDocument(documentData) {\n    try {\n      const response = await this.api.post('/documents/create', documentData);\n      return response.data;\n    } catch (error) {\n      this.handleError(error, 'Document creation failed');\n    }\n  }\n\n  // Verify Document\n  async verifyDocument(documentId) {\n    try {\n      const response = await this.api.post(`/documents/${documentId}/verify`);\n      return response.data;\n    } catch (error) {\n      this.handleError(error, 'Document verification failed');\n    }\n  }\n\n  // Transfer Document\n  async transferDocument(documentId, recipientId) {\n    try {\n      const response = await this.api.post(`/documents/${documentId}/transfer`, {\n        recipientId\n      });\n      return response.data;\n    } catch (error) {\n      this.handleError(error, 'Document transfer failed');\n    }\n  }\n\n  // Get All Documents\n  async getUserDocuments() {\n    try {\n      const response = await this.api.get('/documents');\n      return response.data.documents || [];\n    } catch (error) {\n      this.handleError(error, 'Failed to fetch documents');\n    }\n  }\n\n  // Get Document by ID\n  async getDocumentById(documentId) {\n    try {\n      const response = await this.api.get(`/documents/${documentId}`);\n      return response.data;\n    } catch (error) {\n      this.handleError(error, 'Failed to fetch document');\n    }\n  }\n\n  // Generic Error Handler\n  handleError(error, defaultMessage) {\n    if (error.response) {\n      // Server responded with an error\n      const errorMessage = error.response.data.message || defaultMessage;\n      console.error('API Error:', errorMessage);\n      throw new Error(errorMessage);\n    } else if (error.request) {\n      // Request made but no response received\n      console.error('Network Error:', error.request);\n      throw new Error('Network error. Please check your connection.');\n    } else {\n      // Error in setting up the request\n      console.error('Request Setup Error:', error.message);\n      throw new Error(defaultMessage);\n    }\n  }\n\n  // Additional Utility Methods\n\n  // Check if a document is transferable\n  isTransferable(document) {\n    return document.documentType === 'Transferable';\n  }\n\n  // Get document status color\n  getStatusColor(status) {\n    switch (status) {\n      case 'Draft':\n        return 'text-gray-500';\n      case 'Active':\n        return 'text-green-500';\n      case 'Verified':\n        return 'text-blue-500';\n      case 'Transferred':\n        return 'text-purple-500';\n      case 'Revoked':\n        return 'text-red-500';\n      default:\n        return 'text-gray-500';\n    }\n  }\n}\nexport default new DocumentService();","map":{"version":3,"names":["axios","DocumentService","constructor","api","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","status","handleUnauthorized","Error","data","message","removeItem","window","location","href","createDocument","documentData","post","handleError","verifyDocument","documentId","transferDocument","recipientId","getUserDocuments","get","documents","getDocumentById","defaultMessage","errorMessage","console","isTransferable","document","documentType","getStatusColor"],"sources":["D:/XDC Network/test124/frontend/src/services/documentService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nclass DocumentService {\r\n    constructor() {\r\n        // Create axios instance\r\n        this.api = axios.create({\r\n            baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3000/api'\r\n        });\r\n\r\n        // Request interceptor for adding token\r\n        this.api.interceptors.request.use(\r\n            (config) => {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    config.headers['Authorization'] = `Bearer ${token}`;\r\n                }\r\n                return config;\r\n            },\r\n            (error) => {\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n\r\n        // Response interceptor for error handling\r\n        this.api.interceptors.response.use(\r\n            (response) => response,\r\n            (error) => {\r\n                // Handle specific error scenarios\r\n                if (error.response) {\r\n                    switch (error.response.status) {\r\n                        case 401:\r\n                            // Token expired or unauthorized, redirect to login\r\n                            this.handleUnauthorized();\r\n                            break;\r\n                        case 403:\r\n                            throw new Error('Access denied');\r\n                        case 404:\r\n                            throw new Error('Resource not found');\r\n                        case 500:\r\n                            throw new Error('Server error');\r\n                        default:\r\n                            throw new Error(\r\n                                error.response.data.message || 'An unexpected error occurred'\r\n                            );\r\n                    }\r\n                } else if (error.request) {\r\n                    // Request made but no response received\r\n                    throw new Error('No response from server');\r\n                } else {\r\n                    // Error in setting up the request\r\n                    throw new Error('Error setting up request');\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    // Handle unauthorized access\r\n    handleUnauthorized() {\r\n        // Clear token and redirect to login\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        window.location.href = '/login';\r\n    }\r\n\r\n    // Create Document\r\n    async createDocument(documentData) {\r\n        try {\r\n            const response = await this.api.post('/documents/create', documentData);\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error, 'Document creation failed');\r\n        }\r\n    }\r\n\r\n    // Verify Document\r\n    async verifyDocument(documentId) {\r\n        try {\r\n            const response = await this.api.post(`/documents/${documentId}/verify`);\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error, 'Document verification failed');\r\n        }\r\n    }\r\n\r\n    // Transfer Document\r\n    async transferDocument(documentId, recipientId) {\r\n        try {\r\n            const response = await this.api.post(`/documents/${documentId}/transfer`, { recipientId });\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error, 'Document transfer failed');\r\n        }\r\n    }\r\n\r\n    // Get All Documents\r\n    async getUserDocuments() {\r\n        try {\r\n            const response = await this.api.get('/documents');\r\n            return response.data.documents || [];\r\n        } catch (error) {\r\n            this.handleError(error, 'Failed to fetch documents');\r\n        }\r\n    }\r\n\r\n    // Get Document by ID\r\n    async getDocumentById(documentId) {\r\n        try {\r\n            const response = await this.api.get(`/documents/${documentId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error, 'Failed to fetch document');\r\n        }\r\n    }\r\n\r\n    // Generic Error Handler\r\n    handleError(error, defaultMessage) {\r\n        if (error.response) {\r\n            // Server responded with an error\r\n            const errorMessage = error.response.data.message || defaultMessage;\r\n            console.error('API Error:', errorMessage);\r\n            throw new Error(errorMessage);\r\n        } else if (error.request) {\r\n            // Request made but no response received\r\n            console.error('Network Error:', error.request);\r\n            throw new Error('Network error. Please check your connection.');\r\n        } else {\r\n            // Error in setting up the request\r\n            console.error('Request Setup Error:', error.message);\r\n            throw new Error(defaultMessage);\r\n        }\r\n    }\r\n\r\n    // Additional Utility Methods\r\n\r\n    // Check if a document is transferable\r\n    isTransferable(document) {\r\n        return document.documentType === 'Transferable';\r\n    }\r\n\r\n    // Get document status color\r\n    getStatusColor(status) {\r\n        switch (status) {\r\n            case 'Draft':\r\n                return 'text-gray-500';\r\n            case 'Active':\r\n                return 'text-green-500';\r\n            case 'Verified':\r\n                return 'text-blue-500';\r\n            case 'Transferred':\r\n                return 'text-purple-500';\r\n            case 'Revoked':\r\n                return 'text-red-500';\r\n            default:\r\n                return 'text-gray-500';\r\n        }\r\n    }\r\n}\r\n\r\nexport default new DocumentService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}