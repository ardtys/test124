{"ast":null,"code":"import axios from 'axios';\nimport { Magic } from 'magic-sdk';\nclass AuthService {\n  constructor() {\n    this.magic = new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY);\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_BACKEND_URL\n    });\n  }\n  async login(email) {\n    try {\n      // Initiate Magic Link login\n      await this.magic.auth.loginWithMagicLink({\n        email\n      });\n\n      // Get user metadata\n      const metadata = await this.magic.user.getMetadata();\n\n      // Send token to backend for verification\n      const response = await this.api.post('/auth/magic-link', {\n        email: metadata.email\n      });\n\n      // Store token and user info\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      return response.data;\n    } catch (error) {\n      console.error('Login error', error);\n      throw error;\n    }\n  }\n  async register(userData) {\n    try {\n      // Send registration data to backend\n      const response = await this.api.post('/auth/register', userData);\n\n      // Store token and user info\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      return response.data;\n    } catch (error) {\n      console.error('Registration error', error);\n      throw error;\n    }\n  }\n  async logout() {\n    try {\n      // Logout from Magic Link\n      await this.magic.user.logout();\n\n      // Clear local storage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    } catch (error) {\n      console.error('Logout error', error);\n    }\n  }\n  isAuthenticated() {\n    return !!localStorage.getItem('token');\n  }\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n  async getProfile() {\n    try {\n      const response = await this.api.get('/auth/profile');\n      return response.data.user;\n    } catch (error) {\n      console.error('Profile fetch error', error);\n      throw error;\n    }\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","Magic","AuthService","constructor","magic","process","env","REACT_APP_MAGIC_PUBLISHABLE_KEY","api","create","baseURL","REACT_APP_BACKEND_URL","login","email","auth","loginWithMagicLink","metadata","user","getMetadata","response","post","localStorage","setItem","data","token","JSON","stringify","error","console","register","userData","logout","removeItem","isAuthenticated","getItem","getCurrentUser","parse","getProfile","get"],"sources":["C:/Users/Daffa/OneDrive/Desktop/XDC NETWORK/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { Magic } from 'magic-sdk';\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    this.magic = new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY);\r\n    this.api = axios.create({\r\n      baseURL: process.env.REACT_APP_BACKEND_URL\r\n    });\r\n  }\r\n\r\n  async login(email) {\r\n    try {\r\n      // Initiate Magic Link login\r\n      await this.magic.auth.loginWithMagicLink({ email });\r\n      \r\n      // Get user metadata\r\n      const metadata = await this.magic.user.getMetadata();\r\n      \r\n      // Send token to backend for verification\r\n      const response = await this.api.post('/auth/magic-link', {\r\n        email: metadata.email\r\n      });\r\n\r\n      // Store token and user info\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Login error', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async register(userData) {\r\n    try {\r\n      // Send registration data to backend\r\n      const response = await this.api.post('/auth/register', userData);\r\n\r\n      // Store token and user info\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Registration error', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async logout() {\r\n    try {\r\n      // Logout from Magic Link\r\n      await this.magic.user.logout();\r\n      \r\n      // Clear local storage\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    } catch (error) {\r\n      console.error('Logout error', error);\r\n    }\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  async getProfile() {\r\n    try {\r\n      const response = await this.api.get('/auth/profile');\r\n      return response.data.user;\r\n    } catch (error) {\r\n      console.error('Profile fetch error', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}