{"ast":null,"code":"import axios from 'axios';\nimport { Magic } from 'magic-sdk';\nclass AuthService {\n  constructor() {\n    // Initialize Magic Link\n    this.magic = new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY);\n\n    // Create axios instance with dynamic configuration\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_BACKEND_URL || 'http://localhost:3000/api'\n    });\n\n    // Add request interceptor\n    this.api.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n  }\n  async login(email) {\n    try {\n      // Initiate Magic Link login\n      const result = await this.magic.auth.loginWithMagicLink({\n        email,\n        showUI: true // Optional: shows Magic Link's UI\n      });\n\n      // Get user metadata from Magic Link\n      const metadata = await this.magic.user.getMetadata();\n      console.log('Magic Link Metadata:', metadata);\n\n      // Send token to backend for verification\n      const response = await this.api.post('/auth/magic-link', {\n        email: metadata.email,\n        publicAddress: metadata.publicAddress\n      });\n      console.log('Backend Response:', response.data);\n\n      // Store token and user info\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      return response.data;\n    } catch (error) {\n      console.error('Detailed Login Error:', error);\n\n      // More detailed error logging\n      if (error.response) {\n        // Server responded with an error\n        console.error('Server Error Response:', error.response.data);\n        throw new Error(error.response.data.message || 'Login failed');\n      } else if (error.request) {\n        // Request made but no response received\n        console.error('No Response Received:', error.request);\n        throw new Error('No response from server');\n      } else {\n        // Error setting up the request\n        console.error('Request Setup Error:', error.message);\n        throw new Error('Error setting up login request');\n      }\n    }\n  }\n  async logout() {\n    try {\n      // Logout from Magic Link\n      await this.magic.user.logout();\n\n      // Clear local storage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    } catch (error) {\n      console.error('Logout error', error);\n    }\n  }\n  isAuthenticated() {\n    return !!localStorage.getItem('token');\n  }\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","Magic","AuthService","constructor","magic","process","env","REACT_APP_MAGIC_PUBLISHABLE_KEY","api","create","baseURL","REACT_APP_BACKEND_URL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","login","email","result","auth","loginWithMagicLink","showUI","metadata","user","getMetadata","console","log","response","post","publicAddress","data","setItem","JSON","stringify","Error","message","logout","removeItem","isAuthenticated","getCurrentUser","parse"],"sources":["C:/Users/Daffa/OneDrive/Desktop/XDC NETWORK/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { Magic } from 'magic-sdk';\r\n\r\nclass AuthService {\r\n    constructor() {\r\n        // Initialize Magic Link\r\n        this.magic = new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY);\r\n        \r\n        // Create axios instance with dynamic configuration\r\n        this.api = axios.create({\r\n            baseURL: process.env.REACT_APP_BACKEND_URL || 'http://localhost:3000/api'\r\n        });\r\n\r\n        // Add request interceptor\r\n        this.api.interceptors.request.use(\r\n            (config) => {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    config.headers['Authorization'] = `Bearer ${token}`;\r\n                }\r\n                return config;\r\n            },\r\n            (error) => Promise.reject(error)\r\n        );\r\n    }\r\n\r\n    async login(email) {\r\n        try {\r\n            // Initiate Magic Link login\r\n            const result = await this.magic.auth.loginWithMagicLink({ \r\n                email,\r\n                showUI: true  // Optional: shows Magic Link's UI\r\n            });\r\n\r\n            // Get user metadata from Magic Link\r\n            const metadata = await this.magic.user.getMetadata();\r\n            \r\n            console.log('Magic Link Metadata:', metadata);\r\n\r\n            // Send token to backend for verification\r\n            const response = await this.api.post('/auth/magic-link', {\r\n                email: metadata.email,\r\n                publicAddress: metadata.publicAddress\r\n            });\r\n\r\n            console.log('Backend Response:', response.data);\r\n\r\n            // Store token and user info\r\n            localStorage.setItem('token', response.data.token);\r\n            localStorage.setItem('user', JSON.stringify(response.data.user));\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Detailed Login Error:', error);\r\n            \r\n            // More detailed error logging\r\n            if (error.response) {\r\n                // Server responded with an error\r\n                console.error('Server Error Response:', error.response.data);\r\n                throw new Error(error.response.data.message || 'Login failed');\r\n            } else if (error.request) {\r\n                // Request made but no response received\r\n                console.error('No Response Received:', error.request);\r\n                throw new Error('No response from server');\r\n            } else {\r\n                // Error setting up the request\r\n                console.error('Request Setup Error:', error.message);\r\n                throw new Error('Error setting up login request');\r\n            }\r\n        }\r\n    }\r\n\r\n    async logout() {\r\n        try {\r\n            // Logout from Magic Link\r\n            await this.magic.user.logout();\r\n            \r\n            // Clear local storage\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n        } catch (error) {\r\n            console.error('Logout error', error);\r\n        }\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return !!localStorage.getItem('token');\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}