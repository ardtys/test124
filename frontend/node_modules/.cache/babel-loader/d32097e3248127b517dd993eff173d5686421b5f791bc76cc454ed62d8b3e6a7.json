{"ast":null,"code":"import api from './api';\nclass DocumentService {\n  async createDocument(documentData) {\n    try {\n      const response = await api.post('/documents/create', documentData);\n      return response.data;\n    } catch (error) {\n      console.error('Document creation error', error);\n      throw error;\n    }\n  }\n  async uploadDocumentFile(file) {\n    const formData = new FormData();\n    formData.append('document', file);\n    try {\n      const response = await api.post('/documents/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('File upload error', error);\n      throw error;\n    }\n  }\n  getDocumentTemplates() {\n    return [{\n      id: 'bill-of-lading',\n      name: 'TradeTrust Bill of Lading v2 (Carrier)',\n      description: 'Bill of Lading document for carrier',\n      templateUrl: '/templates/bill-of-lading.json'\n    }, {\n      id: 'certificate-of-origin',\n      name: 'TradeTrust ChAFTA Certificate of Origin v2',\n      description: 'Certificate of Origin document',\n      templateUrl: '/templates/certificate-of-origin.json'\n    }, {\n      id: 'invoice',\n      name: 'TradeTrust Invoice v2 (DNS-DID)',\n      description: 'Invoice document with DNS-DID',\n      templateUrl: '/templates/invoice.json'\n    }];\n  }\n  async downloadTemplate(templateId) {\n    const templates = this.getDocumentTemplates();\n    const template = templates.find(t => t.id === templateId);\n    if (!template) {\n      throw new Error('Template not found');\n    }\n    try {\n      const response = await fetch(template.templateUrl);\n      const blob = await response.blob();\n\n      // Create download link\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${template.id}-template.json`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n    } catch (error) {\n      console.error('Template download error', error);\n      throw error;\n    }\n  }\n}\nexport default new DocumentService();","map":{"version":3,"names":["api","DocumentService","createDocument","documentData","response","post","data","error","console","uploadDocumentFile","file","formData","FormData","append","headers","getDocumentTemplates","id","name","description","templateUrl","downloadTemplate","templateId","templates","template","find","t","Error","fetch","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove"],"sources":["C:/Users/Daffa/OneDrive/Desktop/XDC NETWORK/frontend/src/services/documentService.js"],"sourcesContent":["import api from './api';\r\n\r\nclass DocumentService {\r\n    async createDocument(documentData) {\r\n        try {\r\n            const response = await api.post('/documents/create', documentData);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Document creation error', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async uploadDocumentFile(file) {\r\n        const formData = new FormData();\r\n        formData.append('document', file);\r\n\r\n        try {\r\n            const response = await api.post('/documents/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('File upload error', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    getDocumentTemplates() {\r\n        return [\r\n            {\r\n                id: 'bill-of-lading',\r\n                name: 'TradeTrust Bill of Lading v2 (Carrier)',\r\n                description: 'Bill of Lading document for carrier',\r\n                templateUrl: '/templates/bill-of-lading.json'\r\n            },\r\n            {\r\n                id: 'certificate-of-origin',\r\n                name: 'TradeTrust ChAFTA Certificate of Origin v2',\r\n                description: 'Certificate of Origin document',\r\n                templateUrl: '/templates/certificate-of-origin.json'\r\n            },\r\n            {\r\n                id: 'invoice',\r\n                name: 'TradeTrust Invoice v2 (DNS-DID)',\r\n                description: 'Invoice document with DNS-DID',\r\n                templateUrl: '/templates/invoice.json'\r\n            }\r\n        ];\r\n    }\r\n\r\n    async downloadTemplate(templateId) {\r\n        const templates = this.getDocumentTemplates();\r\n        const template = templates.find(t => t.id === templateId);\r\n\r\n        if (!template) {\r\n            throw new Error('Template not found');\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(template.templateUrl);\r\n            const blob = await response.blob();\r\n            \r\n            // Create download link\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = `${template.id}-template.json`;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            a.remove();\r\n        } catch (error) {\r\n            console.error('Template download error', error);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new DocumentService();\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,eAAe,CAAC;EAClB,MAAMC,cAAcA,CAACC,YAAY,EAAE;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,mBAAmB,EAAEF,YAAY,CAAC;MAClE,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACf;EACJ;EAEA,MAAME,kBAAkBA,CAACC,IAAI,EAAE;IAC3B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,IAAI,CAAC;IAEjC,IAAI;MACA,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,mBAAmB,EAAEM,QAAQ,EAAE;QAC3DG,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,OAAOV,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAMA,KAAK;IACf;EACJ;EAEAQ,oBAAoBA,CAAA,EAAG;IACnB,OAAO,CACH;MACIC,EAAE,EAAE,gBAAgB;MACpBC,IAAI,EAAE,wCAAwC;MAC9CC,WAAW,EAAE,qCAAqC;MAClDC,WAAW,EAAE;IACjB,CAAC,EACD;MACIH,EAAE,EAAE,uBAAuB;MAC3BC,IAAI,EAAE,4CAA4C;MAClDC,WAAW,EAAE,gCAAgC;MAC7CC,WAAW,EAAE;IACjB,CAAC,EACD;MACIH,EAAE,EAAE,SAAS;MACbC,IAAI,EAAE,iCAAiC;MACvCC,WAAW,EAAE,+BAA+B;MAC5CC,WAAW,EAAE;IACjB,CAAC,CACJ;EACL;EAEA,MAAMC,gBAAgBA,CAACC,UAAU,EAAE;IAC/B,MAAMC,SAAS,GAAG,IAAI,CAACP,oBAAoB,CAAC,CAAC;IAC7C,MAAMQ,QAAQ,GAAGD,SAAS,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACT,EAAE,KAAKK,UAAU,CAAC;IAEzD,IAAI,CAACE,QAAQ,EAAE;MACX,MAAM,IAAIG,KAAK,CAAC,oBAAoB,CAAC;IACzC;IAEA,IAAI;MACA,MAAMtB,QAAQ,GAAG,MAAMuB,KAAK,CAACJ,QAAQ,CAACJ,WAAW,CAAC;MAClD,MAAMS,IAAI,GAAG,MAAMxB,QAAQ,CAACwB,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MAC5C,MAAMK,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACrCF,CAAC,CAACG,IAAI,GAAGP,GAAG;MACZI,CAAC,CAACI,QAAQ,GAAG,GAAGd,QAAQ,CAACP,EAAE,gBAAgB;MAC3CkB,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,CAAC,CAAC;MAC5BA,CAAC,CAACO,KAAK,CAAC,CAAC;MACTP,CAAC,CAACQ,MAAM,CAAC,CAAC;IACd,CAAC,CAAC,OAAOlC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACf;EACJ;AACJ;AAEA,eAAe,IAAIN,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}